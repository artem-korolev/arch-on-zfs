---
- name: Get UUID of the hibernate partition by label
  ansible.builtin.shell: blkid -o value -s UUID {{ hibernate_mapper_device }}
  register: hibernate_uuid
  changed_when: false

- name: Ensure hibernate partition UUID was found
  ansible.builtin.fail:
    msg: Hibernate partition with label 'hibernate' not found or has no UUID.
  when: hibernate_uuid.stdout == ""

- name: Echo UUID of hibernate partition
  ansible.builtin.debug:
    msg: Hibernate partition UUID = {{ hibernate_uuid.stdout }}

- name: Update /etc/initramfs-tools/conf.d/resume
  ansible.builtin.copy:
    dest: /etc/initramfs-tools/conf.d/resume
    content: "RESUME=UUID={{ hibernate_uuid.stdout }}\n"
    owner: root
    group: root
    mode: "0644"
    backup: true

- name: Get current GRUB_CMDLINE_LINUX_DEFAULT line from /etc/default/grub
  ansible.builtin.command:
    cmd: grep '^GRUB_CMDLINE_LINUX_DEFAULT=' /etc/default/grub
  register: current_grub_line
  changed_when: false

- name: Extract the parameters (remove the variable name and surrounding quotes)
  ansible.builtin.set_fact:
    current_grub_params: "{{ current_grub_line.stdout | regex_replace('^GRUB_CMDLINE_LINUX_DEFAULT=\"(.*)\"$', '\\1') }}"

- name: Remove any existing resume=UUID parameter from the GRUB parameters
  ansible.builtin.set_fact:
    updated_grub_params: "{{ current_grub_params | regex_replace(' ?resume=UUID=[^ ]+', '') | trim }}"

- name: Append new resume parameter to the GRUB parameters
  ansible.builtin.set_fact:
    new_grub_params: "{{ updated_grub_params }} resume=UUID={{ hibernate_uuid.stdout }}"

- name: Update GRUB_CMDLINE_LINUX_DEFAULT in /etc/default/grub with new parameters
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: ^GRUB_CMDLINE_LINUX_DEFAULT=
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="{{ new_grub_params }}"'
    owner: root
    group: root
    mode: "0644"
    backup: yes

- name: Update initramfs
  ansible.builtin.command: update-initramfs -u
  register: initramfs_output
  changed_when: "'update-initramfs' in initramfs_output.stdout"

- name: Update GRUB configuration
  ansible.builtin.command: update-grub
  register: grub_output
  changed_when: "'update-grub' in grub_output.stdout"
