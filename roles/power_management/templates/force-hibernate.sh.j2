#!/usr/bin/env bash
set -euo pipefail

# Locate the battery device (assumes only one battery)
BATTERY_DEVICE=$(upower -e | grep -m 1 BAT)

# If no battery device is found, exit.
if [ -z "$BATTERY_DEVICE" ]; then
    exit 0
fi

# Check the battery state; only proceed if discharging.
BATTERY_STATE=$(upower -i "$BATTERY_DEVICE" | grep -m 1 'state:' | awk '{print $2}')
if [ "$BATTERY_STATE" != "discharging" ]; then
    # System is plugged in or fully charged â€“ do nothing.
    exit 0
fi

# Get battery percentage
BATTERY_LEVEL=$(upower -i "$BATTERY_DEVICE" | grep percentage | awk '{print $2}' | sed 's/%//')
CRITICAL_THRESHOLD={{ battery_critical_level }}

# Compare battery level with threshold
if [ "${BATTERY_LEVEL:-0}" -le "${CRITICAL_THRESHOLD:-0}" ]; then

    if swapon "{{ hibernate_mapper_device }}" 2>&1 | logger -t force-hibernate; then
        logger -t force-hibernate "Hibernation swap enabled successfully: {{ hibernate_mapper_device }}"
    else
        if swapoff "{{ hibernate_mapper_device }}" 2>&1 | logger -t force-hibernate; then
            logger -t force-hibernate "Successfully swapped off {{ hibernate_mapper_device }}"
            swapon "{{ hibernate_mapper_device }}" 2>&1 | logger -t force-hibernate;
            logger -t force-hibernate "Hibernate space swapped on back again: {{ hibernate_mapper_device }}"
        else
            logger -t force-hibernate "Fallback action failed: swapoff/swapon: {{ hibernate_mapper_device }}"
        fi
    fi

    logger -t force-hibernate "Memory usage after swapon:"
    free -h 2>&1 | logger -t force-hibernate
    lsblk {{ hibernate_mapper_device }} 2>&1 | logger -t force-hibernate
    swapon --show 2>&1 | logger -t force-hibernate


    # The system will hibernate now
    logger -t force-hibernate "Invoking systemctl hibernate..."
    systemctl hibernate --force --ignore-inhibitors 2>&1 | logger -t force-hibernate
fi
