
2024-09-17T16:55:11.527861
================================ System Message ================================

You will get information about a codebase that is currently on disk in the current folder.
The user will ask you to write a script that runs the code in a specific way.
You will answer with code blocks that include all the necessary terminal commands.
Do not install globally. Do not use sudo.
Do not explain the code, just give the commands.
Do not use placeholders, use example values (like . for a folder argument) if necessary.


================================ Human Message =================================


        Make a unix script that
        a) installs dependencies
        b) runs all necessary parts of the codebase (in parallel if necessary)
        
Information about the codebase:

```
File: Structure
1 ansible-workstation-setup/
2 ├── ansible.cfg
3 ├── inventory/
4 │   └── hosts
5 ├── playbooks/
6 │   ├── main.yml
7 │   ├── users.yml
8 │   ├── software.yml
9 │   ├── system.yml
10 ├── roles/
11 │   ├── users/
12 │   │   ├── tasks/
13 │   │   │   └── main.yml
14 │   ├── software/
15 │   │   ├── tasks/
16 │   │   │   ├── main.yml
17 │   │   │   ├── brave.yml
18 │   │   │   ├── vscode.yml
19 │   │   │   └── docker.yml
20 │   ├── system/
21 │   │   ├── tasks/
22 │   │   │   └── main.yml
23 └── group_vars/
24     └── all.yml

File: ansible.cfg
1 [defaults]
2 inventory = inventory/hosts
3 roles_path = roles

File: inventory/hosts
1 localhost ansible_connection=local

File: playbooks/main.yml
1 - name: Workstation Setup
2   hosts: localhost
3   become: yes
4   gather_facts: yes
5 
6   roles:
7     - users
8     - system
9     - software

File: playbooks/users.yml
1 - name: User Setup
2   hosts: localhost
3   become: yes
4   gather_facts: yes
5 
6   roles:
7     - users

File: playbooks/software.yml
1 - name: Software Installation
2   hosts: localhost
3   become: yes
4   gather_facts: yes
5 
6   roles:
7     - software

File: playbooks/system.yml
1 - name: System Configuration
2   hosts: localhost
3   become: yes
4   gather_facts: yes
5 
6   roles:
7     - system

File: roles/users/tasks/main.yml
1 - name: Ensure ZFS is installed
2   apt:
3     name: zfsutils-linux
4     state: present
5 
6 - name: Create users with ZFS datasets
7   block:
8     - name: Check if user {{ item }} exists
9       command: id {{ item }}
10       register: user_exists
11       ignore_errors: yes
12 
13     - name: Create ZFS dataset for user {{ item }}
14       command: zfs create rpool/USERDATA/home_{{ item }}
15       when: user_exists.rc != 0
16 
17     - name: Set ZFS mountpoint for user {{ item }}
18       command: zfs set mountpoint=/home/{{ item }} rpool/USERDATA/home_{{ item }}
19       when: user_exists.rc != 0
20 
21     - name: Create user {{ item }}
22       user:
23         name: "{{ item }}"
24         groups: "cdrom,dip,plugdev,lpadmin,audio,plugdev,users"
25         shell: /bin/bash
26         create_home: yes
27       when: user_exists.rc != 0
28 
29     - name: Set ownership and permissions for user {{ item }}
30       file:
31         path: "/home/{{ item }}"
32         owner: "{{ item }}"
33         group: "{{ item }}"
34         mode: '0700'
35       when: user_exists.rc != 0
36 
37   loop:
38     - artem
39     - crypto

File: roles/software/tasks/main.yml
1 - include_tasks: brave.yml
2 - include_tasks: vscode.yml
3 - include_tasks: docker.yml
4 
5 - name: Install additional codecs and fonts
6   apt:
7     name: ubuntu-restricted-extras
8     state: present
9 
10 - name: Install additional software packages
11   apt:
12     name:
13       - gstreamer1.0-libav
14       - gstreamer1.0-plugins-bad
15       - gstreamer1.0-plugins-ugly
16       - libdvd-pkg
17       - nvidia-prime
18       - build-essential
19       - vulkan-sdk
20       - git
21       - mpv
22       - vkd3d-demos
23       - pkg-config
24       - libssl-dev
25       - htop
26       - apt-transport-https
27       - sublime-merge
28       - code-insiders
29     state: present
30 
31 - name: Reconfigure libdvd-pkg
32   command: dpkg-reconfigure libdvd-pkg
33   args:
34     creates: /usr/share/doc/libdvd-pkg

File: roles/software/tasks/brave.yml
1 - name: Add Brave browser repository key
2   apt_key:
3     url: https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
4     state: present
5 
6 - name: Add Brave browser repository
7   apt_repository:
8     repo: "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main"
9     state: present
10 
11 - name: Install Brave browser
12   apt:
13     name: brave-browser
14     state: present

File: roles/software/tasks/vscode.yml
1 - name: Add VSCode repository key
2   apt_key:
3     url: https://packages.microsoft.com/keys/microsoft.asc
4     state: present
5 
6 - name: Add VSCode repository
7   apt_repository:
8     repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main"
9     state: present
10 
11 - name: Install VSCode Insiders
12   apt:
13     name: code-insiders
14     state: present

File: roles/software/tasks/docker.yml
1 - name: Install Docker dependencies
2   apt:
3     name:
4       - ca-certificates
5       - gnupg
6       - lsb-release
7     state: present
8 
9 - name: Add Docker repository key
10   apt_key:
11     url: https://download.docker.com/linux/ubuntu/gpg
12     state: present
13 
14 - name: Add Docker repository
15   apt_repository:
16     repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
17     state: present
18 
19 - name: Install Docker packages
20   apt:
21     name:
22       - docker-ce
23       - docker-ce-cli
24       - containerd.io
25       - docker-buildx-plugin
26       - docker-compose-plugin
27     state: present
28 
29 - name: Add user artem to docker group
30   user:
31     name: artem
32     groups: docker
33     append: yes
34 
35 - name: Enable Docker services
36   systemd:
37     name: "{{ item }}"
38     enabled: yes
39     state: started
40   loop:
41     - docker.service
42     - containerd.service

File: roles/system/tasks/main.yml
1 - name: Add multiverse repository
2   apt_repository:
3     repo: "deb http://archive.ubuntu.com/ubuntu $(lsb_release -cs) multiverse"
4     state: present
5 
6 - name: Update apt cache
7   apt:
8     update_cache: yes

File: group_vars/all.yml
1 ---
2 # Global variables can be defined here if needed

File: requirements.txt
1 ansible==2.9

```

================================== Ai Message ==================================

```sh
#!/bin/bash

# Install dependencies
pip install --user -r requirements.txt

# Run all necessary parts of the codebase
ansible-playbook playbooks/main.yml
```
